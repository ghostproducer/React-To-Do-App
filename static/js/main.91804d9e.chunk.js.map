{"version":3,"sources":["logo.svg","store/reducer.js","store/actionTypes.js","store/index.js","components/styles.js","components/TodoItem.js","components/TodoList.js","helpers/pokeAPI.js","store/actions.js","store/selectors.js","containers/TodoListContainer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","todoItems","todoListReducer","state","arguments","length","undefined","action","type","textElem","key","Math","random","text","item","newList","Array","from","unshift","Object","objectSpread","filteredList","filter","element","middlewares","thunk","createStore","reducer","applyMiddleware","apply","cardStyle","externalStyle","width","margin","containerStyle","marginBottom","checkBoxStyle","checkBox","height","marginRight","selectedColor","fill","buttonStyle","padding","iconStyle","iconHoverColor","paperStyle","textFieldStyle","rootElement","marginTop","defaultColor","color","underline","borderColor","ItemWrapper","styled","div","_templateObject","CheckedText","span","_templateObject2","props","checked","TodoItem","toggleCheck","_this","setState","prevState","deleteElement","_this$props","onRemove","elementKey","this","react","Card_default","a","style","Checkbox_default","onCheck","IconButton_default","iconClassName","onClick","React","TodoList_templateObject","TodoList","textField","handleKeyPress","evt","preventDefault","addTodoItem","handleChange","event","currentTarget","value","removeTodoItem","addRandomPokemon","Paper_default","zDepth","RaisedButton_default","fullWidth","label","TextField_default","hintText","floatingLabelText","underlineFocusStyle","floatingLabelFocusStyle","onKeyPress","onChange","TodoList_ItemWrapper","map","elem","components_TodoItem","fetchRandomPokemon","_ref","asyncToGenerator","regenerator_default","mark","_callee","randomSeed","response","wrap","_context","prev","next","floor","axios","get","concat","sent","abrupt","data","name","t0","alert","stop","selectTodoItems","connect","dispatch","then","pokemonName","faker","hacker","phrase","AppWrapper","App_templateObject","AppHeader","header","App_templateObject2","AppTitle","h1","_templateObject3","AppIntro","_templateObject4","App","es","store","src","logo","className","alt","MuiThemeProvider_default","TodoListContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","react_default","createElement","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.91804d9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { ADD_TODO_ITEM, REMOVE_TODO_ITEM } from './actionTypes';\n\nconst initialState = {\n  todoItems: [],\n};\n\nconst todoListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO_ITEM: {\n      const textElem = { key: Math.random(), text: action.item };\n      const newList = Array.from(state.todoItems);\n\n      newList.unshift(textElem);\n\n      return {\n        ...state,\n        todoItems: newList,\n      };\n    }\n\n    case REMOVE_TODO_ITEM: {\n      const { todoItems } = state;\n      const filteredList = todoItems.filter(\n        element => element.key !== action.key\n      );\n\n      return {\n        ...state,\n        todoItems: filteredList,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoListReducer;\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducer';\n\nconst middlewares = [thunk];\n\nexport default createStore(reducer, applyMiddleware(...middlewares));\n","//using external inline-style to minimize re-render problems\n\nexport const cardStyle = {\n  externalStyle: {\n    width: '75%',\n    margin: 'auto',\n  },\n  containerStyle: {\n    marginBottom: '15px',\n  },\n};\n\nexport const checkBoxStyle = {\n  checkBox: {\n    width: '24px',\n    height: '24px',\n    marginRight: '20px',\n  },\n  selectedColor: {\n    fill: '#ed7224',\n  },\n};\n\nexport const buttonStyle = {\n  padding: '0px',\n  margin: 'auto',\n};\n\nexport const iconStyle = {\n  iconHoverColor: '#ed7224',\n};\n\nexport const paperStyle = {\n  width: '35%',\n  height: '70vh',\n  margin: 'auto',\n};\n\nexport const textFieldStyle = {\n  rootElement: {\n    width: '75%',\n    marginBottom: '40px',\n    marginTop: '20px',\n  },\n  defaultColor: { color: '#ed7224' },\n  underline: { borderColor: '#ed7224' },\n};\n","/* @flow */\n\nimport * as React from 'react';\nimport Checkbox from 'material-ui/Checkbox';\nimport IconButton from 'material-ui/IconButton';\nimport Card from 'material-ui/Card';\n\nimport styled from 'styled-components';\n\nimport { cardStyle, checkBoxStyle, buttonStyle, iconStyle } from './styles';\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CheckedText = styled.span`\n  flex: 1 1 auto;\n  text-decoration: ${props => (props.checked ? 'line-through' : 'none')};\n`;\n\ntype Props = {\n  text: string,\n  onRemove: (element: number) => void,\n  elementKey: number,\n};\n\ntype State = {\n  checked: boolean,\n};\n\nclass TodoItem extends React.PureComponent<Props, State> {\n  state = {\n    checked: false,\n  };\n\n  toggleCheck = (): void => {\n    this.setState(prevState => {\n      return {\n        checked: !prevState.checked,\n      };\n    });\n  };\n\n  deleteElement = (): void => {\n    const { onRemove, elementKey } = this.props;\n    onRemove(elementKey);\n  };\n\n  render(): React.Node {\n    const { checked } = this.state;\n    const { text } = this.props;\n\n    return (\n      <Card\n        style={cardStyle.externalStyle}\n        containerStyle={cardStyle.containerStyle}\n      >\n        <ItemWrapper>\n          <Checkbox\n            style={checkBoxStyle.checkBox}\n            iconStyle={checkBoxStyle.selectedColor}\n            checked={checked}\n            onCheck={this.toggleCheck}\n          />\n          <CheckedText checked={checked}>{text}</CheckedText>\n          <IconButton\n            iconClassName=\"material-icons\"\n            style={buttonStyle}\n            iconStyle={iconStyle}\n            onClick={this.deleteElement}\n          >\n            clear\n          </IconButton>\n        </ItemWrapper>\n      </Card>\n    );\n  }\n}\n\nexport default TodoItem;\n","/* @flow */\n\nimport * as React from 'react';\nimport TextField from 'material-ui/TextField';\nimport Paper from 'material-ui/Paper';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport styled from 'styled-components';\n\nimport TodoItem from './TodoItem';\nimport { paperStyle, textFieldStyle } from './styles';\n\nconst ItemWrapper = styled.div`\n  max-height: 45vh;\n  overflow-y: auto;\n`;\n\ntype Props = {\n  addRandomPokemon: () => void,\n  addTodoItem: (item: string) => void,\n  removeTodoItem: (key: number) => void,\n  todoItems: [\n    {\n      key: number,\n      text: string,\n    },\n  ],\n};\n\ntype State = {\n  textField: string,\n};\n\nclass TodoList extends React.PureComponent<Props, State> {\n  state = {\n    textField: '',\n  };\n\n  handleKeyPress = (evt: SyntheticEvent<HTMLInputElement>): void => {\n    if (evt.key === 'Enter') {\n      evt.preventDefault();\n\n      const { textField } = this.state;\n      this.props.addTodoItem(textField);\n      this.setState({ textField: '' });\n    }\n  };\n  handleChange = (event: SyntheticEvent<HTMLInputElement>): void => {\n    this.setState({ textField: event.currentTarget.value });\n  };\n\n  render() {\n    const { todoItems, removeTodoItem, addRandomPokemon } = this.props;\n    return (\n      <Paper style={paperStyle} zDepth={4}>\n        <RaisedButton\n          fullWidth\n          label=\"Add some random stuff!\"\n          onClick={addRandomPokemon}\n        />\n        <TextField\n          hintText=\"Hit a new todo and press Enter!\"\n          floatingLabelText=\"Todo Title:\"\n          fullWidth={true}\n          style={textFieldStyle.rootElement}\n          underlineFocusStyle={textFieldStyle.underline}\n          floatingLabelFocusStyle={textFieldStyle.defaultColor}\n          onKeyPress={this.handleKeyPress}\n          value={this.state.textField}\n          onChange={this.handleChange}\n        />\n        <ItemWrapper>\n          {todoItems.map(\n            elem =>\n              elem.text && (\n                <TodoItem\n                  text={elem.text}\n                  onRemove={removeTodoItem}\n                  elementKey={elem.key}\n                  key={elem.key}\n                />\n              )\n          )}\n        </ItemWrapper>\n      </Paper>\n    );\n  }\n}\n\nexport default TodoList;\n","import axios from 'axios';\n\nexport const fetchRandomPokemon = async () => {\n  const endpoint = 'https://pokeapi.co/api/v2/pokemon/';\n  const randomSeed = Math.floor(Math.random() * 500);\n\n  try {\n    const response = await axios.get(`${endpoint}${randomSeed}/`);\n\n    return response.data.name;\n  } catch (error) {\n    alert(error);\n  }\n};\n","// @flow\n\nimport { ADD_TODO_ITEM, REMOVE_TODO_ITEM } from './actionTypes';\n\nexport const addTodoItem = (item: String): Object => ({\n  type: ADD_TODO_ITEM,\n  item,\n});\n\nexport const removeTodoItem = (key: number): Object => ({\n  type: REMOVE_TODO_ITEM,\n  key,\n});\n","export const selectTodoItems = state => state.todoItems;\n","import { connect } from 'react-redux';\nimport faker from 'faker';\n\nimport TodoList from '../components/TodoList';\nimport { fetchRandomPokemon } from '../helpers/pokeAPI';\n\nimport { addTodoItem, removeTodoItem } from '../store/actions';\nimport { selectTodoItems } from '../store/selectors';\n\nconst addRandomPokemon = () => {\n  return function(dispatch) {\n    return fetchRandomPokemon().then(pokemonName => {\n      dispatch(addTodoItem(`${faker.hacker.phrase()} with ${pokemonName}`));\n    });\n  };\n};\n\nconst mapStateToProps = state => ({\n  todoItems: selectTodoItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTodoItem: item => dispatch(addTodoItem(item)),\n  removeTodoItem: key => dispatch(removeTodoItem(key)),\n  addRandomPokemon: () => dispatch(addRandomPokemon()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","// @flow\nimport * as React from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../store';\n\nimport logo from '../logo.svg';\nimport '../css/App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TodoListContainer from '../containers/TodoListContainer';\n\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  text-align: center;\n  background-color: #6c7b8e;\n  height: 100vh;\n`;\n\nconst AppHeader = styled.header`\n  background-color: #4b586b;\n  height: 150px;\n  padding: 20px;\n  color: white;\n`;\n\nconst AppTitle = styled.h1`\n  font-size: 1.5em;\n`;\n\nconst AppIntro = styled.p`\n  font-size: large;\n`;\n\nconst App = () => (\n  <Provider store={store}>\n    <AppWrapper>\n      <AppHeader>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <AppTitle>Welcome to To-Do App</AppTitle>\n      </AppHeader>\n      <AppIntro />\n      <MuiThemeProvider>\n        <TodoListContainer />\n      </MuiThemeProvider>\n    </AppWrapper>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}